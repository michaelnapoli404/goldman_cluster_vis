[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "wave-visualizer"
version = "0.1.0"
description = "Python package for visualizing longitudinal survey data transitions across multiple waves"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "michaelnapoli404", email = "michaelnapoli404@gmail.com"}
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Scientific/Engineering :: Visualization",
    "Topic :: Scientific/Engineering :: Information Analysis",
]
keywords = ["visualization", "survey", "longitudinal", "data-analysis", "plotly"]
requires-python = ">=3.8"

dependencies = [
    "pandas>=1.3.0",
    "plotly>=5.0.0",
    "numpy>=1.20.0",
    "pyreadstat>=1.1.0",
]

[project.optional-dependencies]
image-export = [
    "kaleido>=0.2.1",
    "psutil>=5.8.0",
]

test = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-mock>=3.10.0",
    "pytest-asyncio>=0.21.0",
    "coverage>=7.0.0",
]

dev = [
    "black>=23.0.0",
    "isort>=5.12.0",
    "mypy>=1.0.0",
    "pre-commit>=3.0.0",
    "bandit>=1.7.5",
    "flake8>=6.0.0",
    "flake8-docstrings>=1.7.0",
    "flake8-import-order>=0.18.2",
    "flake8-cognitive-complexity>=0.1.0",
    "pydocstyle>=6.3.0",
    "build>=0.10.0",
    "pyinstaller>=5.13.0",
    "upx-ucl; platform_system != 'Darwin'",
]

docs = [
    "sphinx>=6.0.0",
    "sphinx-rtd-theme>=1.3.0",
    "myst-parser>=2.0.0",
]

all = [
    "wave-visualizer[image-export,test,dev,docs]",
]

[project.urls]
Homepage = "https://github.com/michaelnapoli404/wave-visualizer"
Repository = "https://github.com/michaelnapoli404/wave-visualizer"
Issues = "https://github.com/michaelnapoli404/wave-visualizer/issues"
Documentation = "https://github.com/michaelnapoli404/wave-visualizer/blob/main/documentation.txt"

[tool.setuptools.packages.find]
where = ["."]
include = ["wave_visualizer*"]
exclude = ["tests*", "example_visualizations*"]

[tool.setuptools.package-data]
wave_visualizer = [
    "settings/**/*.csv",
    "settings/**/*.json",
]

# Black configuration
[tool.black]
line-length = 88
target-version = ['py38', 'py39', 'py310', 'py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

# isort configuration
[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["wave_visualizer"]
known_third_party = ["pandas", "numpy", "plotly", "pyreadstat"]

# Coverage configuration
[tool.coverage.run]
source = ["wave_visualizer"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/migrations/*",
    "*/venv/*",
    "*/env/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.coverage.html]
directory = "htmlcov"

# Pytest configuration
[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers"
testpaths = ["tests"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
    "requires_data: marks tests that require external data files",
]

# MyPy configuration
[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true 